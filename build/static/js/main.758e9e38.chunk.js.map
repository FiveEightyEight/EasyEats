{"version":3,"sources":["components/restList.js","components/Modal.js","services/services.js","services/firebase.js","containers/generationPage.js","components/Button.js","containers/home.js","components/InputField.js","containers/InfoForm.js","containers/pollPage.js","App.js","serviceWorker.js","index.js","components/logo.jpg"],"names":["List","props","categories","image_url","menu_url","name","price","poll","isDisabled","handleOnClick","isChecked","react_default","a","createElement","Fragment","className","style","height","width","objectFit","src","alt","href","target","rel","paddingLeft","paddingRight","join","type","id","onClick","value","disabled","checked","htmlFor","Modal","specHandleOnClick","handleOnChange","handleOnPollSubmit","votes","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","placeholder","onChange","parseYelpData","_ref","businesses","Promise","resolve","reject","Array","isArray","length","reduce","acc","e","i","alias","display_phone","phone","push","title","selectRandom","n","arr","randomArray","arguments","undefined","num","Math","floor","random","includes","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","GenerationPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","generateRandomRestaurantList","generatePoll","state","trim","match","setState","firstNum","parseInt","defineProperty","getOptions","axios","method","url","concat","lat","lon","headers","Authorization","then","res","data","restaurants","localStorage","setItem","JSON","stringify","getOptions2","address","passedIn","randomRestaurants","display","redirect","_this$state","int","replace","firebase","database","ref","child","set","req_votes","total_votes","err","console","log","history","checkData","once","snapshot","val","catch","pageLoad","values","queryString","parse","location","search","ls","getItem","pageReloaded","store","temp","split","loc","_this$state2","map","key","restList","inputValue","Component","withRouter","goTo","Home","loading","geo","setTimeout","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","_this2","Sky_default","images","0","1","2","3","4","how","time","size","background","logo","marginRight","components_Button","InputField","handleInputChange","states","for","class","selected","InfoForm","handleChange","city","zip","components_InputField","React","PollPage","voted_on","voted_value","copySuccess","voted","copyToClipboard","textArea","select","document","execCommand","focus","handleVote","index","newTotal_votes","params","totalVotes","react_router","to","backgroundColor","textarea","readOnly","queryCommandSupported","assign","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","react_router_dom","src_App","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.758e9e38.chunk.js","sourcesContent":["import React from 'react';\n\nconst List = (props) => {\n    const { categories, image_url, menu_url, name, price, poll, isDisabled, handleOnClick, isChecked } = props;\n    return (\n        <>\n            <div className='row container mx-0' >\n                <div className='col-sm-12 col-md-2'>\n                    <img className='card-img' style={{ height: '100px', width: '100%', objectFit: 'cover' }} src={image_url} alt={name} />\n                </div>\n                <div className='card-header col' >\n                    <li className=\"list-group-item\">\n                        <div className='row justify-content-between'>\n                            <span className='col h4'>{name}</span>\n                            <a href={menu_url} target='_blank' className='col-sm-2' rel=\"noopener noreferrer\">Menu</a>\n                        </div>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <div className='row'>\n                            <div className='col col-xs-10'>\n                                <span className='col h6' style={{ paddingLeft: '2px', paddingRight: '2px' }}> {categories.join(', ')} </span>\n                            </div>\n                            {(price) ? <span className='col-sm-1'>{price}</span> : <span className='col-sm-1'>--</span>}\n                            {\n                                (poll) ?\n                                    <div className=\" col-sm-1 form-check form-check-inline\">\n                                        <input className=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" onClick={handleOnClick('voted_on')} value={name} disabled={isDisabled} checked={isChecked}/>\n                                        <label className=\"form-check-label h6\" htmlFor=\"inlineCheckbox1\">Vote</label>\n                                    </div>\n                                    :\n                                    <></>\n                            }\n                        </div>\n                    </li>\n                </div>\n            </div>\n\n\n        </>\n\n    )\n}\nexport default List;","import React from 'react';\n\nexport default props => {\n    const { specHandleOnClick, handleOnChange, handleOnPollSubmit, votes } = props;\n    return (\n        <>\n            <button type='button' className=\"btn btn-outline-info\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\" style={{ width: '100%' }} onClick={specHandleOnClick} >\n                Create Poll\n            </button>\n\n\n            <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\">Votes Required</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"2 votes or more\" value={votes} onChange={handleOnChange('votes')}/>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={handleOnPollSubmit('modal')}>Go Vote</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};","import axios from 'axios';\nconst yelpURL = 'https://api.yelp.com/v3/businesses/';\n\n\n\nconst get = (route) => {\n    if (typeof route !== 'string') return Promise.reject('Params were invalid; must be strings');\n    return axios({\n        url: yelpURL + route,\n        method: 'get',\n    });\n};\n\nconst getList = (lat, lon) => {\n    if(typeof lat !== 'string' || typeof lat !== 'string') return Promise.reject('Params were invalid; must be strings');\n    if (!lat.includes('.') || lon.includes('.')) return Promise.reject('lat & lon must be floating point numbers');\n    return axios({\n        url: yelpURL + 'search?term=restaurants&latitude=40.7429098&longitude=-73.9418147',\n        method: 'get',\n    });\n};\n\nconst parseYelpData = ( {businesses} ) => {\n    return new Promise( (resolve, reject) => {\n        if (!Array.isArray(businesses) || !businesses.length) return reject('Invalid data passed, Must be a yelp data response');\n        return resolve(\n            businesses.reduce( (acc, e, i) => {\n                const { name, alias,  display_phone, image_url, price, phone,} = e;\n                const categories = e.categories.reduce( (acc, e) => {\n                    acc.push(e.title)\n                    return acc;\n                    }, []);\n                acc.push({\n                    name,\n                    display_phone: display_phone || null,\n                    phone: phone || null,\n                    menu_url: 'https://www.yelp.com/menu/'+alias,\n                    image_url: image_url || null, \n                    price: price || null,\n                    categories\n                })\n                 return acc;\n            }, [])\n        )\n    });\n};\n\nconst randomArray = (n, length, arr =[]) => {\n    if (arr.length === n) {\n        return arr;\n    };\n    const num = Math.floor(Math.random() * length);\n    if (arr.includes(num)) {\n        return randomArray(n, length, arr);\n    } else {\n        arr.push(num);\n        return randomArray(n, length, arr);\n    };\n};\n\nconst selectRandom = (n, arr) => {\n    const randomNums = randomArray(n, arr.length);\n    return randomNums.reduce( (a, e) => {\n        a.push(arr[e])\n        return a;\n    }, []);\n };\n\nexport {\n    get,\n    getList,\n    parseYelpData,\n    selectRandom,\n}","import app from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyB6IU_v1uW_H1xso-2pP5EfcW1MCwQhOfA\",\n  authDomain: \"easyeats-a662b.firebaseapp.com\",\n  databaseURL: \"https://easyeats-a662b.firebaseio.com\",\n  projectId: \"easyeats-a662b\",\n  storageBucket: \"easyeats-a662b.appspot.com\",\n  messagingSenderId: \"38887412175\"\n};\n\napp.initializeApp(config);\n\nexport default app;","import React, { Component } from 'react';\nimport List from '../components/restList';\nimport Modal from '../components/Modal';\nimport { parseYelpData, selectRandom } from '../services/services';\nimport axios from 'axios';\nimport queryString from 'query-string';\nimport firebase from '../services/firebase';\n\nclass GenerationPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            lat: null,\n            lon: null,\n            restaurants: null,\n            display: null,\n            redirect: false,\n            votes: '',\n\n        }\n    }\n\n    handleOnClick = name => e => {\n        switch (name) {\n            case 'regen':\n                this.generateRandomRestaurantList();\n                break;\n            case 'create':\n                this.generatePoll();\n                break;\n            case 'modal':\n                const votes = this.state.votes.trim(); \n                if(!votes.match(/[0-9]/g)) {\n                    this.setState({\n                        votes: '',\n                    })\n                    return;\n                };\n                const firstNum = votes.match(/[0-9]/g)[0];\n                if (parseInt(firstNum) < 2) {\n                    this.setState({\n                        votes: '',\n                    })\n                    return;\n                };\n                this.generatePoll(firstNum);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    specHandleOnClick = e => {\n    }\n\n    handleOnChange = name => e => {\n        switch (name) {\n            case 'votes':\n                this.setState({ [name]: e.target.value })\n                break;\n            default:\n                return;\n        };\n    };\n\n    getOptions = () => {\n        axios({\n            method: 'GET',\n            url: `${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?term=restaurants&latitude=${this.state.lat}&longitude=${this.state.lon}&limit=50`,\n            headers: {\n                Authorization: 'BEARER 7qhXzmc-qBs_nON-yV8qSFRDQOJkB9e5UYMVuyik8ySqoilGOlVAvGE7F31YxftS2nEMUkugJUlS7PyM-D0nnUuaxq3BOKUVH0aHZipZHx48RP-X31AVCYz1bX7EXHYx'\n            }\n        })\n            .then(res => parseYelpData(res.data))\n            .then(restaurants => this.setState({ restaurants }, () => {\n                localStorage.setItem('ee_restList', JSON.stringify(restaurants));\n                this.generateRandomRestaurantList();\n            }));\n    }\n    getOptions2 = (address) => {\n        axios({\n            method: 'GET',\n            url: `${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search?term=restaurants&location=${address}&limit=50`,\n            headers: {\n                Authorization: 'BEARER 7qhXzmc-qBs_nON-yV8qSFRDQOJkB9e5UYMVuyik8ySqoilGOlVAvGE7F31YxftS2nEMUkugJUlS7PyM-D0nnUuaxq3BOKUVH0aHZipZHx48RP-X31AVCYz1bX7EXHYx'\n            }\n        })\n            .then(res => parseYelpData(res.data))\n            .then(restaurants => this.setState({ restaurants }, () => {\n                localStorage.setItem('ee_restList', JSON.stringify(restaurants));\n                this.generateRandomRestaurantList();\n            }));\n    }\n\n    generateRandomRestaurantList = (passedIn = null) => {\n        const restaurants = passedIn || this.state.restaurants;\n        if (!restaurants) {\n            this.setState({ redirect: true })\n            return;\n        };\n        const randomRestaurants = selectRandom(4, restaurants);\n        if (passedIn) {\n            this.setState({\n                restaurants: passedIn,\n                display: randomRestaurants,\n            }, () => {\n                localStorage.setItem('ee_restDisplayList', JSON.stringify(randomRestaurants));\n            })\n        } else {\n            this.setState({\n                display: randomRestaurants,\n            }, () => {\n                localStorage.setItem('ee_restDisplayList', JSON.stringify(randomRestaurants));\n            })\n        }\n    }\n\n    generatePoll = () => {\n        const { display, votes } = this.state;\n        const id = display.reduce((acc, e, i) => {\n            const int = Math.floor(Math.random() * display[i].name.length)\n            acc += display[i].name[1] + display[i].name[0] + display[i].name[int]\n            return acc;\n        }, '').replace(/[^a-zA-Z0-9]/g, \"ee\")\n\n        const firebaseRef = firebase.database().ref('/polls');\n        firebaseRef.child(id).set({ data: display, req_votes: votes, total_votes: [0,0,0,0]}, err => {\n            if (err) {\n                console.log('FAILED TO WRITE TO FIREBASE')\n                return;\n            } else {\n                this.props.history.push(`/poll/${id}`)\n            }\n        });\n    };\n\n    checkData = (id) => {\n        const firebaseRef = firebase.database().ref('/polls/' + id);\n        firebaseRef.once('value')\n            .then(snapshot => {\n                console.log('snapshot: ', snapshot.val())\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    pageLoad = () => {\n        const values = queryString.parse(this.props.location.search)\n        if (!values.lat || !values.lon) {\n            const temp = this.props.location.search.split('=')[1];\n            const ls = (localStorage.getItem('ee_loc')) ? JSON.parse(localStorage.getItem('ee_loc')) : null;\n            if (ls) {\n                if (ls === temp) return this.pageReloaded();\n            }\n            const store = { loc: temp };\n            localStorage.setItem('ee_loc', JSON.stringify(store));\n            this.getOptions2(temp);\n        } else if (values.lat && values.lon) {\n            const ls = (localStorage.getItem('ee_latlon')) ? JSON.parse(localStorage.getItem('ee_latlon')) : null;\n            if (ls) {\n                if (values.lat === ls.lat && values.lon === ls.lon) return this.pageReloaded();\n            }\n            const store = { lat: values.lat, lon: values.lon };\n            localStorage.setItem('ee_latlon', JSON.stringify(store));\n            this.setState({ lat: values.lat, lon: values.lon }, () => {\n                this.getOptions()\n            })\n        } else {\n            this.setState({ redirect: true })\n            return;\n        }\n    }\n\n    pageReloaded = () => {\n        const restaurants = (localStorage.getItem('ee_restList')) ? JSON.parse(localStorage.getItem('ee_restList')) : null;\n        if (!restaurants) {\n            localStorage.setItem('ee_loc', JSON.stringify(null));\n            localStorage.setItem('ee_latlon', JSON.stringify(null));\n            this.pageLoad();\n            return;\n        }\n        const display = (localStorage.getItem('ee_restDisplayList')) ? JSON.parse(localStorage.getItem('ee_restDisplayList')) : null;\n        if (!display) {\n            this.generateRandomRestaurantList(restaurants);\n            return;\n        }\n        this.setState({\n            restaurants,\n            display,\n        });\n    }\n\n    componentDidMount() {\n        // const {lat , lon} = this.state\n        this.pageLoad();\n    }\n    \n    render() {\n        const { display, votes } = this.state\n        return (\n\n            <>\n                {\n                    (!display) ? (<div className=\"d-flex justify-content-center mt-5 pt-5\"><div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div></div>)\n                        :\n                        <div className='container'>\n                            {\n                                display.map((e, i) => {\n                                    return (\n                                        <div className='my-1' key={i}>\n                                            <List {...e} />\n                                        </div>\n                                    )\n                                })\n                            }\n                            <div className='container row my-1' >\n                                <div className='col-sm-12 my-1'>\n                                    <button type='button' className=\"btn btn-outline-info\" onClick={this.handleOnClick('regen')} style={{ width: '100%' }} >Generate New List</button>\n                                </div>\n                                <div className='col-sm-12 my-1'>\n                                    <Modal specHandleOnClick={this.specHandleOnClick} handleOnChange={this.handleOnChange} inputValue={votes} handleOnPollSubmit={this.handleOnClick} />\n                                    {/* <button type='button' className=\"btn btn-outline-info\" style={{ width: '100%' }} onClick={this.handleClick('create')} >Create Poll</button> */}\n                                </div>\n                            </div>\n                        </div>\n                }\n            </>\n        )\n    }\n}\n\nexport default GenerationPage ","import React from 'react'\nimport {withRouter} from 'react-router-dom'\n\n\nconst Button = (props) =>{\n    const {goTo,value, handleOnClick} = props  //goTo is the url to go to and value is the value of the button\n    return <button type=\"button\" className=\"btn btn-primary\" onClick={e=>{\n        if(value === 'My Location') handleOnClick()\n        props.history.push(goTo)}\n    }>{value}</button>\n}\n\nexport default withRouter(Button)","import React, {Component} from 'react'\nimport Button from '../components/Button'\nimport Sky from 'react-sky';\nimport logo from '../components/logo.jpg';\n\nclass Home extends Component{\n    state = {\n        loading: null,\n    }\n\n    geo = () =>{\n        this.setState({\n            loading: true,\n        }, () => {\n            setTimeout( () => {\n                this.setState({\n                    loading: false,\n                })\n            }, 1500);\n        });\n       if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const {latitude,longitude} = position.coords\n                    console.log('latitude:' + latitude, 'Longitude:' + longitude)\n                    // this.setState({latitude:position.coords.latitude,longitude:position.coords.longitude},()=>{\n                    //     console.log(this.state)\n                    // })\n                    this.props.history.push(`/genpoll?lat=${latitude}&lon=${longitude}`)\n                })\n        }\n    }\n\n    // componentDidUpdate(pp, ps) {\n    //     console.log('previous state: ', ps)\n    //     console.log('current state: ', this.state);\n    // }\n\n    render(){\n        return <> \n        <Sky \n          images={{\n      \n              0: \"https://image.flaticon.com/icons/svg/706/706195.svg\",\n                1: \"https://image.flaticon.com/icons/svg/1676/1676981.svg\",\n                2: \"https://image.flaticon.com/icons/svg/1591/1591724.svg\",\n                3: \"https://image.flaticon.com/icons/svg/273/273804.svg\",\n                4: \"https://image.flaticon.com/icons/svg/1672/1672272.svg\",\n\n                \n                \n          }}\n          how={130} \n          time={25} \n          size={'90px'}\n          background={'teal'}\n        />\n\n            <div className='container mt-5'>\n            <div className ='row justify-content-md-center'>\n            <div className='col-md-12 row justify-content-md-center'>\n                <img className='col col-md-auto' src={logo}/>\n            </div>\n                {/* <h2 style={{textAlign:'center'}}>EasyEats</h2> */}\n                <div className='col-md-12 row justify-content-md-center m-2'>\n                    <span style={{marginRight:'1%'}}><Button className='col col-md-6'goTo='/' value='My Location' handleOnClick={e=>{this.geo()}}/></span>\n                    <Button className='col col-md-6' goTo='/infopage' value='Enter Location' />\n                </div>\n                {(!this.state) ? (<div className=\"d-flex justify-content-center mt-5 pt-5\"><div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div></div>): <></>}\n            </div>\n            </div>\n            {/* <div>\n                <iframe src=\"https://giphy.com/embed/3oEjHLS6Va8qdALZCM\" width=\"480\" height=\"480\" frameBorder=\"0\" class=\"giphy-embed\" allowFullScreen></iframe>\n            </div> */}\n        </>\n    }\n}\n\nexport default Home\n","import React from 'react';\nimport logo from '../components/logo.jpg';\n\nconst InputField=(props)=>{\n    const {handleInputChange,handleOnClick,states} = props\n    return(\n        <>\n            <div className='mt-5 pt-5'>\n                    <form >\n                        <div className='image'  >\n                            <img src={logo} alt='logo' />\n                        </div>\n                        <div className='row justify-content-center'> \n                            <div className='col ml-4 col-sm-8 col-md-5' style={{ background: 'red' }}>\n                                <div className=\"form-group\">\n                                    <label for=\"inputAddress\">Address</label>\n                                    <input type=\"text\" onChange={e => handleInputChange(e)} name=\"address\" className=\"form-control\" id=\"validationCustom01\" placeholder=\"1234 Main St\" />\n                                </div>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group col-md-6\">\n                                        <label for=\"inputCity\">City</label>\n                                        <input type=\"text\" onChange={e => handleInputChange(e)} name=\"city\" className=\"form-control\" id=\"inputCity\" />\n                                    </div>\n                                    <div className=\"form-group col-md-4\">\n                                        <label for=\"inputState\">State</label>\n                                        <select id=\"inputState\" onChange={e => handleInputChange(e)} name=\"state\" class=\"form-control\">\n                                            <option selected>Choose...</option>\n                                            {\n                                                states.map((e, i) => {\n                                                    return (<option key={i} value={e}>{e}</option>)\n                                                })\n                                            }\n                                        </select>\n                                    </div>\n                                    <div className=\"form-group col-md-2\">\n                                        <label for=\"inputZip\">Zip</label>\n                                        <input type=\"text\" onChange={e => handleInputChange(e)} name=\"zip\" className=\"form-control\" id=\"inputZip\" />\n                                    </div>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-info\" onClick={handleOnClick}>Enter</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n        </>\n    )\n}\nexport default InputField;\n\n//store then import here\n","import React from 'react';\nimport '../components/infoform.css'\n\nimport Sky from 'react-sky';\n\nimport InputField from '../components/InputField'\n\n\n\nclass InfoForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            states: ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District of Columbia', 'Federated States of Micronesia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Island', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'],\n            address: null,\n            city: null,\n            state: null,\n            zip: null,\n        }\n    }\n    handleChange = (e) => {\n        console.log(e.target.value)\n    }\n    handleOnClick = () => {\n        //console.log(this.state)\n        const { address, city, zip, state } = this.state\n        this.props.history.push(`/genpoll?address=${address},${city},${state} ${zip}`)\n    }\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    render() {\n        const { states } = this.state\n        return (\n            <>\n                <Sky\n                    images={{\n\n                        0: \"https://image.flaticon.com/icons/svg/1076/1076323.svg\",\n                        1: \"https://image.flaticon.com/icons/svg/1585/1585289.svg\",\n                        2: \"https://image.flaticon.com/icons/svg/1594/1594208.svg\",\n\n\n\n                    }}\n                    how={130}\n                    time={25}\n                    size={'90px'}\n                    background={'white'}\n                />\n                \n                <InputField handleInputChange={this.handleInputChange} handleOnClick={this.handleOnClick} states={states} />\n            </>\n        )\n    }\n}\n\nexport default InfoForm;","import React, { Component } from 'react'\nimport List from '../components/restList'\nimport { Redirect } from 'react-router-dom'\nimport firebase from '../services/firebase';\n\n\nclass PollPage extends Component {\n\n    state = {\n        id: null,\n        redirect: false,\n        restaurants: null,\n        req_votes: null,\n        total_votes: null,\n        voted_on: null,\n        voted_value: null,\n        disabled: null,\n        copySuccess: '',\n    }\n\n    checkData = (id) => {\n        const firebaseRef = firebase.database().ref('/polls/' + id);\n        firebaseRef.once('value')\n            .then(snapshot => {\n                return snapshot.val()\n            })\n            .then((data) => {\n                if (!data) {\n                    this.setState({\n                        redirect: true,\n                    });\n                } else {\n                    const ls = (localStorage.getItem('ee_' + id)) ? JSON.parse(localStorage.getItem('ee_' + id)) : null;\n                    if (ls) {\n                        this.setState({\n                            id,\n                            restaurants: data.data,\n                            req_votes: data.req_votes,\n                            total_votes: data.total_votes,\n                            voted_on: ls.voted,\n                            disabled: true,\n                        })\n                        return;\n                    }\n                    this.setState({\n                        id,\n                        restaurants: data.data,\n                        req_votes: data.req_votes,\n                        total_votes: data.total_votes,\n                    });\n                }\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    copyToClipboard = (e) => {\n        this.textArea.select();\n        document.execCommand('copy');\n        // This is just personal preference.\n        // I prefer to not show the the whole text area selected.\n        e.target.focus();\n        this.setState({ copySuccess: 'Copied!' });\n    };\n\n    componentDidMount() {\n        const { id } = this.props.match.params || null;\n        if (!id) {\n            this.setState({\n                redirect: true,\n            })\n        } else {\n            this.checkData(id);\n        }\n    }\n\n    handleVote = () => {\n        const { id, voted_on, restaurants, total_votes, req_votes } = this.state;\n        const index = restaurants.reduce((acc, e, i) => {\n            if (voted_on === e.name)\n                acc = i;\n            return acc;\n        }, '');\n        console.log(this.state)\n        total_votes[index] = (total_votes[index] + 1);\n        const newTotal_votes = total_votes;\n        const firebaseRef = firebase.database().ref('/polls');\n        firebaseRef.child(id).set({ data: restaurants, req_votes: req_votes, total_votes: newTotal_votes }, err => {\n            if (err) {\n                console.log('FAILED TO WRITE TO FIREBASE')\n                return;\n            } else {\n                localStorage.setItem('ee_' + id, JSON.stringify({ voted: voted_on }))\n                this.setState({\n                    total_votes: newTotal_votes,\n                    disabled: true,\n                })\n            }\n        });\n\n        // const newPostKey = firebase.database().ref().child('/polls/'+id).push().key;\n        // let updates = {};\n        // updates['/polls/' + id + '/' + total_votes + newPostKey ] = newTotal_votes;\n        // firebase.database().ref().update(updates);\n\n\n    };\n\n    handleOnClick = name => (e) => {\n        if (!e) return;\n        const { voted_on } = this.state;\n        if (name === 'vote') {\n            if (!voted_on) return;\n            this.handleVote();\n            return;\n        }\n        if (e.target.value === voted_on) {\n            this.setState({\n                [name]: null,\n            });\n            return;\n        }\n        this.setState({\n            [name]: e.target.value,\n        });\n    };\n\n\n    render() {\n\n        const { id, redirect, restaurants, disabled, voted_on, total_votes } = this.state;\n        const totalVotes = (total_votes)? total_votes.reduce( (acc, e, i) => {return acc+=e}, 0) : 0;\n        console.log(restaurants)\n        return (\n            <>\n                {\n                    (redirect) ? <Redirect to='/' />\n                        :\n                        (restaurants) ?\n                            <div className=\"container mx-0 col-12 \">\n                                <div className='row justify-content-md-center'>\n                                    <div className='col-sm-12 col-md-6 row'>\n                                        <form className='col col-sm-1'\n                                            style={{ height: '0px', width: '0px', backgroundColor: 'grey' }}>\n                                            <textarea\n                                                style={{ height: '0px', width: '0px', backgroundColor: 'grey' }}\n                                                ref={(textarea) => this.textArea = textarea}\n                                                value={'http://localhost:3000/#/poll/' + id}\n                                                readOnly={true}\n                                            />\n                                        </form>\n                                        {\n                                            /* Logical shortcut for only displaying the \n                                               button if the copy command exists */\n                                            document.queryCommandSupported('copy') &&\n                                            <div className='col-sm-4'>\n                                                <button className='btn btn-outline-info col-sm-12' onClick={this.copyToClipboard}>Copy Url</button>\n                                                {this.state.copySuccess}\n                                            </div>       \n                                        }\n                                        <div className='col-sm-4'>\n                                            <span className='h4'>Total Votes: {totalVotes} </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='row justify-content-md-center'>\n                                    {\n                                        restaurants.map((e, i) => {\n                                            return (\n                                                <div className='my-1 col-md-auto' key={i}>\n                                                    {\n                                                        (voted_on) ?\n                                                            <List {...e} poll={true} handleOnClick={this.handleOnClick} isChecked={(voted_on === e.name) ? true : false} isDisabled={disabled} />\n                                                            :\n                                                            <List {...e} poll={true} handleOnClick={this.handleOnClick} isDisabled={disabled} />\n                                                    }\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    {\n                                        (voted_on) ?\n                                            <div className='container row my-1' >\n                                                <div className='col-sm-12 my-1'>\n                                                    <button type='button' className=\"btn btn-outline-info\" onClick={this.handleOnClick('vote')} style={{ width: '100%' }} >Vote</button>\n                                                </div>\n                                            </div>\n                                            :\n                                            <></>\n                                    }\n                                </div>\n                            </div>\n                            :\n                            <div className=\"d-flex justify-content-center mt-5 pt-5\"><div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div></div>\n                }\n            </>\n        )\n    }\n}\n\nexport default PollPage ","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom'\n\nimport { Home, GenerationPage, InfoForm, PollPage } from './containers/'\n\nclass App extends Component{\n  render(){\n    return <>\n    {/* <PollPage/> */}\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/infopage' exact component={InfoForm} />\n        <Route path='/genpoll' component={GenerationPage} />\n        <Route path='/poll/:id' component={PollPage} />\n      </Switch>\n    </>\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom'\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.adb37c85.jpg\";"],"sourceRoot":""}